# Push button
# Connect to USB
# sudo mount /dev/sda1 /mnt
# sudo cp out/klipper.uf2 /mnt
# sudo umount /mnt

[include rp2040_pin_aliases.cfg]
# [include search_vars.cfg]

#========================================================
#=====================iHeater cfg=========================
#========================================================

[mcu iHeater]
serial: /dev/serial/by-id/usb-Klipper_rp2040_DE63581213745233-if00 


#PID_CALIBRATE HEATER=iHeater_H TARGET=50
[heater_generic iHeater_H ]
heater_pin: iHeater:H0
max_power: 1
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: iHeater:T0
control: pid
pwm_cycle_time: 0.3
min_temp: 0
max_temp: 120
pid_Kp=32.923
pid_Ki=5.628
pid_Kd=48.150


[verify_heater iHeater_H]
max_error: 240
check_gain_time: 120
heating_gain: 1


[fan_generic iHeater_F]
pin: iHeater:FAN0
max_power: 1.0
shutdown_speed: 0


[temperature_sensor iHeater_Sens_C]
sensor_pin: iHeater:T0
sensor_type: NTC 100K MGB18-104F39050L32


#######################################################
##########################SETUP########################
#######################################################
[gcode_macro DELTA_TEMPERATURE]
variable_delta_temp: 10 # Установите значение дельты по умолчанию, например, 10°C
gcode:

[gcode_macro FAN_SPEED]
variable_fan_speed: 0.7  # Начальная скорость вентилятора (0.0 - выключен, 1.0 - максимум)
gcode:

[gcode_macro HEATER_TARGET]
variable_heater_target: 0
gcode:
##########################SETUP########################


[gcode_macro M141]
#rename_existing: M141.1
gcode:
    # Получаем желаемую температуру камеры из параметра S, по умолчанию 60°C
    {% set chamber_temp = params.S|default(60)|int %}
    # Получаем значение температурной дельты
    {% set delta = printer['gcode_macro DELTA_TEMPERATURE'].delta_temp %}
    # Вычисляем целевую температуру нагревателя
    {% set heater_target = chamber_temp + delta %}
    # Устанавливаем целевую температуру нагревателя
    SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={heater_target}
    # Обновляем переменную температуры нагревателя
    SET_GCODE_VARIABLE MACRO=HEATER_TARGET VARIABLE=heater_target VALUE={heater_target}
    # Запускаем контроллер нагревателя
    UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1

[gcode_macro M191]
#rename_existing: M191.1
gcode:
    # Получаем желаемую температуру камеры из параметра S, по умолчанию 0°C (отключение)
    {% set chamber_temp = params.S|default(0)|int %}
    # Получаем значение температурной дельты
    {% set delta = printer['gcode_macro DELTA_TEMPERATURE']delta_temp %}
    # Вычисляем целевую температуру нагревателя
    {% set heater_target = chamber_temp + delta %}
    # Устанавливаем целевую температуру нагревателя
    SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={heater_target}
    # Обновляем переменную температуры нагревателя
    SET_GCODE_VARIABLE MACRO=HEATER_TARGET VARIABLE=heater_target VALUE={heater_target}
    # Запускаем контроллер нагревателя
    UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1


[gcode_macro HEAT]
gcode:
    # Получаем желаемую температуру камеры из параметра CHAMBER_TEMP, по умолчанию 40°C
    {% set chamber_temp = params.CHAMBER_TEMP|default(40)|int %}
    # Получаем значение температурной дельты
    {% set delta = printer['gcode_macro DELTA_TEMPERATURE'].delta_temp %}
    # Вычисляем целевую температуру нагревателя
    {% set heater_target = chamber_temp + delta %}
    
    # Устанавливаем целевую температуру нагревателя
    SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={heater_target}
    # Обновляем переменную температуры нагревателя
    SET_GCODE_VARIABLE MACRO=HEATER_TARGET VARIABLE=heater_target VALUE={heater_target}
    UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1


[gcode_macro iHeater_OFF]
gcode:
    # Отключаем нагреватель
    SET_GCODE_VARIABLE MACRO=HEATER_TARGET VARIABLE=heater_target VALUE=0
    SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET=0
    # Запускаем контролирующий макрос для отслеживания охлаждения
    # Выводим сообщение о начале процесса отключения
    RESPOND prefix="iHeater_OFF" msg="Отключение нагревателя. Ждите охлаждения до 50°C."
    # UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1



[delayed_gcode _iHEATER_CONTROL]
gcode:
    {% set target_heater_temp = printer['gcode_macro HEATER_TARGET'].heater_target %}
    {% set current_heater_temp = printer['heater_generic iHeater_H'].temperature %}
    {% set chamber_temp = printer['temperature_sensor iHeater_Sens_C'].temperature %}
    {% set delta = printer['gcode_macro DELTA_TEMPERATURE'].delta_temp %}
    {% set target_chamber_temp = target_heater_temp - delta %}
    {% set fan_speed = printer['gcode_macro FAN_SPEED'].fan_speed %}
    
    {% if target_heater_temp > 0 %}
        {% if chamber_temp < target_chamber_temp %}
            # Поддерживаем температуру нагревателя
            SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={target_heater_temp}
            # Включаем вентилятор на заданную скорость
            SET_FAN_SPEED FAN=iHeater_F SPEED={fan_speed}
        {% else %}
            # Уменьшаем температуру нагревателя
            {% set reduced_heater_temp = (target_heater_temp - (delta / 4.0)) | round(2) %}
            SET_HEATER_TEMPERATURE HEATER=iHeater_H TARGET={reduced_heater_temp}
            # Включаем вентилятор на максимальную скорость
            SET_FAN_SPEED FAN=iHeater_F SPEED={fan_speed}
            # Обновляем переменную скорости вентилятора до максимальной
        {% endif %}
    {% else %}
        # HEATER_TARGET == 0, процесс отключения
        {% if current_heater_temp > 50 %}
            # Поддерживаем вентилятор включенным пока нагреватель не остынет до 50°C
            RESPOND prefix="iHeater_OFF" msg="Охлажнение нагревательного элемента."
            SET_FAN_SPEED FAN=iHeater_F SPEED=1.0
            SET_GCODE_VARIABLE MACRO=FAN_SPEED VARIABLE=fan_speed VALUE=1.0
        {% else %}
            # Отключаем вентилятор и останавливаем контролирующий макрос
            SET_FAN_SPEED FAN=iHeater_F SPEED=0.0
            SET_GCODE_VARIABLE MACRO=FAN_SPEED VARIABLE=fan_speed VALUE=1.0
            UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=0
            RESPOND prefix="iHeater_control" msg="Нагрев камеры и вентилятор отключены."
        {% endif %}
    {% endif %}
    
    {% if target_heater_temp > 0 or current_heater_temp > 50 %}
        # Перезапуск макроса через 1 секунду, если необходимо
        UPDATE_DELAYED_GCODE ID=_iHEATER_CONTROL DURATION=1
    {% endif %}
